import{_ as a,o,c as s,e as n,F as r,d as e}from"./index-aa64cacb.js";const i={name:"SumariodeContenidos"},c=e('<h1>Sumario de Contenidos</h1><br><h2>Computo I</h2><br><div class="container"><div class="row"><div class="col"><h3>Semana 2 (Del 23 Enero al 29 De Enero):</h3><br><h5>Introduccion a las librerias (Bootstrap y VueJS)</h5><p>Durante esta semana, recibimos una introducción a las librerías que utilizaríamos durante este proceso de aprendizaje. Se hizo hincapié en la librería de VueJS, ya que ya poseemos conocimientos previos sobre la librería de Bootstrap </p></div><div class="col"><h3>Semana 3 (Del 30 de Enero al 05 de Febrero):</h3><br><h5>Rendering y directivas</h5><br><p>Durante esta semana, el contenido se enfocó en profundizar en el funcionamiento de Vue y su proceso de renderizado. Se explicó cómo Vue interactúa con la información ingresada por el usuario y cómo la renderiza de manera reactiva. </p><p>Tambien aprendimos acerca de las directivas de vue y como funcionan dentro de los proyectos que creamos</p></div><div class="col"><h3>Semana 4 (Del 06 de Febrero al 12 de Febrero):</h3><br><h5>Enventos | Clases y estilos en tiempo real</h5><p>En esta semana, adquirimos conocimientos sobre el manejo de eventos en JavaScript. Aprendimos cuáles son los eventos y cuándo aplicar cada uno de ellos, además de conocer los diferentes modificadores que pueden tener estos elementos. </p><p>Tambien aprendimos lo que son las clases dentro de los proyectos de vue, tambien como aplicar estilos para modificar nuestra pagina</p></div><div class="col"><h3>Semana 5 (Del 13 de Febreo al 19 de Febrero):</h3><br><h5>Componentes</h5><br><p> Durante esta semana, hemos aprendido acerca de los componentes en VueJS, incluyendo su sintaxis, manejo y las diferentes partes que los componen. Además, aprendimos cómo registrar los componentes tanto de forma global como local. </p><p>También aprendimos sobre los eventos, y como enviar datos a traves de ellos</p></div></div></div><h2>Computo II</h2>',6),d=e('<br><div class="container"><div class="row"><div class="col"><h3>Semana 7 (Del 27 de Febrero al 05 De Marzo):</h3><br><h5>Introduccion al desarrollo con PHP | Instalacion y Configuracion del Servidor:</h5><p>En esta semana aprendí como descargar e instalar el lenguaje y servidor de PHP a su vez aprendimos los comandos basicos del lenguaje, aprendimos tambien en como funciona, que puede hacer, cuales son sus ventajas. </p></div><div class="col"><h3>Semana 8 (Del 06 de Marzo al 12 de Marzo):</h3><br><h5>Bucles,Arreglos y Funciones</h5><br><p>En esta semana aprendí acerca los funciones, arreglos y bucles, aprendimos la sintaxis y como utilizarlos, aprendimos caracteristicas de cada uno como que los bucles se usan para ejecutar un bloque de declaraciones varias veces hasta que se cumpla la condicion, los bucles se utiliza cuando el usuario sabe de antemano cuántas veces debe ejecutarse el bloque y las funciones aprendimos que son una pieza o bloque de código reutilizable que realiza una acción específica. Toma la entrada del usuario en forma de parámetros, realiza ciertas acciones y da la salida. </p><p>Tambien aprendimos que hay funciones integradas y funciones creadas por el usuario</p></div><div class="col"><h3>Semana 9 (Del 13 de Marzo al 19 de Marzo):</h3><br><h5>Introduccion a la Programacion Orientada a Objetos</h5><p>En esta semana Aprendí que la POO (Programacion Orientada a Objetos) es una paradigma de programacion que usa objetos y sus interacciones para diseñar aplicaciones y programas de computadora, esta forma de programar esta basada en varias tecnicas como el encapsulamiento herencia, etc,. Aprendimos practicas que son muy utiles en la POO, aprendimos que es y como usar la herencia, abstraccion, encapsulamiento y polimorfismo, evidentemente aprendimos que es una clase y cuales son sus componentes (Métodos, Métodos Constructor, Parámetros, Instancias u Objectos). </p><p>A su vez aprendimos las ventajas de la POO, como organizar el código en clases y la utilidad de la creacion de un modelo.</p></div><div class="col"><h3>Semana 10 (Del 20 de Marzo al 26 de Marzo):</h3><br><h5>Clases Abstractas e Interfaces</h5><br><p> Aprendí qie ñas clases específican las características deun conjunto de objetos, y un objeto es la instacia de una clase, también vimos que las clases abstractas y las interfaces son mecanimos que obligan a la herencia y no se pueden instanciar objetos en ellas, aprendí algunas caracteristicas de las clases abstractas como: <li>Pueden declarar la existencia de los métodos, pero no su implementación</li><li>La implementación debe tener la misma &quot;firma&quot; es decir, declaración de tipos y el número de argumentos.</li><li>Pueden contener métodos no-abstractos, pero debe de contener al menos un método abstracto.</li></p><p>También aprendí algunas características de las interfaces como: <li> Nos permiten crear código con el cual especificar qué métodos deben ser implementados por una clase, sin definir su implementacion</li><li> Se definen con la palabra reservada &quot;interface&quot;</li><li> Los métodos declarados en una interfaz deben ser públicos.</li></p></div></div></div><div class="container"><div class="row"><div class="col"><h3>Semana 11 (Del 27 de Marzo al 02 de Abril):</h3><br><h5>Introduccion de Laravel</h5><br><p>Durante esta semana, nos introducimos a laravel que es un framework con sintaxis elegante y expresiva que nos proporciona una experiencia agradable y tambien nos brinda funciones poderosas. Aprendí que contiene un sistema de rutas que mediante la dicha anteriormente es fácil crear y mantener todo tipo de link agradables a usuarios, buscadores, etc. Y este mismo tiene un sistema de abstracción de base de datos (con ORM) sencillo de manejar y mediante el cual podemos tratar los datos de la base de datos como si fuera simples objetos. </p><p>Aprendí también sobre el ecosistema de laravel, acerca de sus servidores y como instalarlo en windows.</p></div><div class="col"><h3>Semana 12 (Del 10 de Abril al 16 de Abril):</h3><br><h5>CRUD en Laravel</h5><p>En esta semana, adquiri los conocimientos básicos para poder crear un CRUD en PHP utilizando laravel, creando tablas, agregando rutas , conectando una base datos, agregando y editando modelos y controladores y agregando vistas. </p><p>Como agregado reforzamos el como hacer formulario de un CRUD.</p></div></div></div>',3);function l(t,m,u,p,b,v){return o(),s(r,null,[c,n(),d],64)}const f=a(i,[["render",l]]);export{f as default};
